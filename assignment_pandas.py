# -*- coding: utf-8 -*-
"""Assignment_pandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eLPKMBY8G5nSR3ZXIXg1lsjJz4OimObX

PART 1:


HOW TO CLEAN DATA WITH PYTHON
Cleaning US Census Data
"""

import numpy as np 
import pandas as pd
import matplotlib.pyplot as plt
from os import listdir
import glob
path = r'/content/all_files'
all_files = glob.glob(path+"/*.csv")
li = []
for filename in all_files:
  df = pd.read_csv(filename, index_col=None, header=0)
  li.append(df)
us_census = pd.concat(li, axis=0, ignore_index=True) 
us_census.head(10)

us_census.dtypes
us_census.drop(columns = ['Unnamed: 0'], inplace=True)
us_census[['Male','Female']] = us_census.GenderPop.str.split("_", expand = True)
us_census.drop(columns = ['GenderPop'], inplace = True)
us_census['Income'] = us_census.Income.str.strip('$')
us_census = us_census.replace('%','', regex = True)
us_census = us_census.replace('F','', regex = True)
us_census = us_census.replace('M','', regex = True)
us_census.head()

us_census.loc[:,'Hispanic':'Income'] = round(us_census.loc[:,'Hispanic':'Income'].apply(pd.to_numeric),2)

us_census['Male'] = us_census['Male'].astype(int)
us_census['Female'] = us_census['TotalPop']-us_census['Male'] 
us_census.duplicated().any()
us_census.drop_duplicates(inplace = True)

import matplotlib.pyplot as plt
plt.scatter(us_census['Female'], us_census['Income'])
plt.xlabel('Salary $', fontsize = 18)
plt.ylabel('Female_population', fontsize = 16)
plt.show()

histo = round(us_census.loc[:,'Hispanic':'Pacific'].apply(lambda x:x*us_census['TotalPop']/100))

histo.hist(column = 'Hispanic')

histo.hist(column = 'White')

histo.hist(column = 'Black')

histo.hist(column = 'Native')

histo.hist(column = 'Asian')

histo.hist(column = 'Pacific')

"""PART 2:

LEARN DATA ANALYSIS WITH PANDAS
Petal Power Inventory
"""

inventory = pd.read_csv('/content/inventory.csv')
inventory

product_request = inventory[inventory['location'] == "Staten Island"]
product_request

seed_request = inventory[(inventory["location"] == "Brooklyn") & (inventory["product_type"] == "seeds")]
seed_request

inventory["In_stock"] = inventory["quantity"] > 0
inventory

inventory["Total_value"] = inventory["price"] * inventory["quantity"]
inventory

combine_lambda = lambda row: '{} - {}'.format(row.product_type,row.product_description)

inventory["full_description"] = inventory.apply(combine_lambda, axis = 1)
inventory["full_description"]